apiVersion: v1
kind: ConfigMap
metadata:
  name: scale-ci-workload-script
data:
  run.sh: |
    #!/bin/sh
    set -eo pipefail
    # pbench Configuration
    echo "$(date -u) Configuring pbench for Node Vertical"
    mkdir -p /var/lib/pbench-agent/tools-default/
    echo "${USER_NAME:-default}:x:$(id -u):0:${USER_NAME:-default} user:${HOME}:/sbin/nologin" >> /etc/passwd
    echo "" > /var/lib/pbench-agent/tools-default/oc
    echo "workload" > /var/lib/pbench-agent/tools-default/label
    if [[ -v ENABLE_PBENCH_AGENTS ]]; then
      echo "" > /var/lib/pbench-agent/tools-default/disk
      echo "" > /var/lib/pbench-agent/tools-default/iostat
      echo "" > /var/lib/pbench-agent/tools-default/mpstat
      echo "" > /var/lib/pbench-agent/tools-default/perf
      echo "" > /var/lib/pbench-agent/tools-default/pidstat
      master_nodes=`oc get nodes -l pbench_agent=true,node-role.kubernetes.io/master= --no-headers | awk '{print $1}'`
      for node in $master_nodes; do
        echo "master" > /var/lib/pbench-agent/tools-default/remote@$node
      done
      infra_nodes=`oc get nodes -l pbench_agent=true,node-role.kubernetes.io/infra= --no-headers | awk '{print $1}'`
      for node in $infra_nodes; do
        echo "infra" > /var/lib/pbench-agent/tools-default/remote@$node
      done
      worker_nodes=`oc get nodes -l pbench_agent=true,node-role.kubernetes.io/worker= --no-headers | awk '{print $1}'`
      for node in $worker_nodes; do
        echo "worker" > /var/lib/pbench-agent/tools-default/remote@$node
      done
    fi
    source /opt/pbench-agent/profile
    echo "$(date -u) Done configuring pbench Node Vertical"
    # End pbench Configuration

    # Start of Test Code
    echo "$(date -u) Running Node Vertical"
    pbench-user-benchmark -- 'VIPERCONFIG=/root/workload/nodevertical.yaml openshift-tests run-test "[Feature:Performance][Serial][Slow] Load cluster should load the cluster [Suite:openshift]"'
    pbench-copy-results --prefix {{nodevertical_test_prefix}}
    echo "$(date -u) Completed Node Vertical"
    # End of Test Code
  nodevertical.yaml: |
    provider: local
    ClusterLoader:
      cleanup: {{nodevertical_cleanup}}
      projects:
        - num: 1
          basename: {{nodevertical_basename}}
          tuning: default
          ifexists: delete
          pods:
            - num: {{total_pod_count.stdout|int}}
              image: {{nodevertical_pod_image}}
              basename: nodevert
              file: nodevert-pod-labeled.yaml
      tuningsets:
        - name: default
          pods:
            stepping:
              stepsize: {{nodevertical_stepsize}}
              pause: {{nodevertical_pause}}
            ratelimit:
              delay: 0
  nodevert-pod-labeled.yaml: |
    ---
    kind: Pod
    apiVersion: v1
    metadata:
      name: nodevert
      labels:
        name: nodevert
    spec:
      containers:
      - name: nodevert
        image: {{nodevertical_pod_image}}
        ports:
        - containerPort: 8080
          protocol: TCP
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: false
      nodeSelector:
        nodevertical: 'true'
